repete
let repete 3 c = c : repete (3-1) c
let repete 3 c = c : repete (n-1) c
let repete n c = c : repete (n-1) c
repete 4
repete 4 x
repete 4
repete 3 c
repete 3
let repete n c = c : repete (n-1) c
:q
tam [0, 1, 2, "oi"]
tam [0]
tam []
:load tam_lista.hs
:load tam_lista.hs
:load tam_lista.hs
:load tam_lista.hs
:q
::load ex1.hs
::load ex1.hs
::load ex1.hs
::load ex1.hs
::load ex1.hs
::load ex1.hs
::load ex1.hs
::load ex1.hs
::load p3.hs
::load p3.hs
::load p3.hs
::load p3.hs
:load ph.hs
::load ph.hs
:q
trSpaces "Ola tudo bem"
::load p3.hs
::load p3.hs
::load p3.hs
::load p3.hs
::load p3.hs
calcExpr [1, 2, 6, 7, 8, 9, 10, 11]
::load p3.hs
::load p3.hs
calcExpr [1, 2, 6, 7, 8, 9, 10, 11]
calcExpr [1, 2, 6, 7, 8, 9, 10]
::load p3.hs
countShorts ["aa", "bb", "gggggggg", "hhhhhhhhhhhhh", "cc"]
countShorts [aa, bb, gggggggg, hhhhhhhhhhhhh, cc]
selectExpr [19, 22, 23, 24, 45, 46, 48, 50, 51]
::load p3.hs
::load p3.hs
selectExpr [19, 22, 23, 24, 45, 46, 48, 50, 51]
::load p3.hs
sumOdds [3, 6, 9, 12]
sumOdds [1, 2, 3]
::load p3.hs
sumOdds [1, 2, 3]
::load p3.hs
sumOdds [1, 2, 3]
::load p3.hs
sumOdds [1, 2, 3]
::load p3.hs
::load p3.hs
sumOdds [1, 2, 3]
::load p3.hs
selectgt5 [4, 5, 6, 7, 8, 1]
::load p3.hs
addSuffix "bolado" ["Miguel", "Gabriel", "Rafael"]
::load p3.hs
::load p3.hs
::load p3.hs
applyExpr [1, 2, 3, 4, 5]
applyExpr [1, 2, 3, 4, 5]
::load p3.hs
multN 5 [1, 2, 3, 4, 5]
::load p3.hs
multN 5 [1, 2, 3, 4, 5]
multN 5 [1, 2, 3, 4, 5]
multN 5 [1, 2, 3, 4, 5]
multN 5 [1, 2, 3, 4, 5]
add10toall [1, 2, 3, 4, 5]
::load p3.hs
::load p3.hs
:q
compareHundred 1024
compareHundred 99
let compareHundred = compare 100
let compare Hundred = compare 100
compareHundred 100
compare 100
let compareHundred x = compare 100 x
multWithEighteen 10
let multWithEighteen = multTwoWithNinte 2
let MultWithEighteen = multTwoWithNinte 2
let MultEighteen = multTwoWithNinte 2
let MultEighteen = multTwoWithNinte 2
multTwoWithNinte 2 3
let multTwoWithNinte = multThree 9
let multThree x y z = x * y * z
(max 4) 5
