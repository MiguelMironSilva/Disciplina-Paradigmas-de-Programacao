:q
:q
superNomes [Miguel, Rafael, Gabriel]
squareFirst [3, 4, 9]
:load prog.hs
:q
:load t1.hs
t1.hs
:q
superNomes [Gabriel, Miguel, Rafael]
:load prog.hs
:load prog.hs
:load prog.hs
:load prog.hs
:load prog.hs
:load prog.hs
:q
:load prog.hs
:q
superNomes [Miguel, Gabriel, Rafael]
:load prog.hs
:q
superNomes [Miguel, Gabriel, Rafael]
superNomes [Miguel, Gabriel, Rafael]
:load prog.hs
:q
hasEqHeads [3, 4, 5] [12, 6, 9]
hasEqHeads [3, 4, 5] [3, 6, 9]
sumSquares 5 9
sumSquares 1 2
:load prog.hs
:q
isLongWord "test"
isLongWord 'test'
squareFirst []
isEven 8.1
square 'A'
square 2
sQuare 2
encodeMe 'N'
isLongWord "test"
squareFirst [-3,4,5]
encodeMe 'S'
isEven 9
isEven 8
square (2+1)
square 2 + 1
:load prog.hs
:load prog.hs
1 prog.hs
load prog.hs
square :: Int -> Int
square x = x^2
square :: Int -> Int
